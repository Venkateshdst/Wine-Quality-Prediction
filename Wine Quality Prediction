import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
wine_data = pd.read_csv('wine.csv')
print(wine_data)
wine_data.shape
wine_data.isnull().sum()
wine_data.head()
sns.catplot(x='quality', data=wine_data, kind='count')
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='volatile acidity',data=wine_data)	
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='citric acid',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='chlorides',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='fixed acidity',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='chlorides',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='free sulfur dioxide',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='total sulfur dioxide',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='density',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='residual sugar',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='pH',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='sulphates',data=wine_data)
plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='alcohol',data=wine_data)
correlation = wine_data.corr()
plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True, square=True,fmt='.1f', annot=True, annot_kws={'size':15}, cmap="Greens")
x= wine_data.drop(['quality'],axis=1)
y= wine_data['quality'].apply(lambda y_value:1 if y_value>=7 else 0)
print(y)
x_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.2, random_state=3)
print(x.shape)
print(x_train.shape)
print(x_test.shape)
model=RandomForestClassifier()
model.fit(x_train,y_train)
train_data_prediction=model.predict(x_train)
accuracy=accuracy_score(y_train, train_data_prediction)
print(accuracy)
test_data_prediction=model.predict(x_test)
test_data_accuracy=accuracy_score(y_test, test_data_prediction)
print(test_data_accuracy)
input_data=(7.4,0.7,0.0,1.9,0.076,11.0,34.0,0.9978,3.51,0.56,9.4)
input_data_as_numpy_array=np.asarray(input_data)
input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)
prediction= model.predict(input_data_reshaped)
print(prediction)
if (prediction[0]==1):
    print("wine is good Quality")
else:
    print("wine is bad quality")
